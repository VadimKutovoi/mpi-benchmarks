# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright © 2009-2018 Inria.  All rights reserved.
# Copyright © 2009-2012 Université Bordeaux
# Copyright © 2009-2010 Cisco Systems, Inc.  All rights reserved.
# See COPYING in top-level directory.

pkgdatadir = $(datadir)/hwloc
pkgincludedir = $(includedir)/hwloc
pkglibdir = $(libdir)/hwloc
pkglibexecdir = $(libexecdir)/hwloc
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
am__append_1 = linux
check_PROGRAMS = hwloc_list_components$(EXEEXT) hwloc_bitmap$(EXEEXT) \
	hwloc_bitmap_string$(EXEEXT) \
	hwloc_bitmap_compare_inclusion$(EXEEXT) \
	hwloc_get_closest_objs$(EXEEXT) \
	hwloc_get_obj_covering_cpuset$(EXEEXT) \
	hwloc_get_cache_covering_cpuset$(EXEEXT) \
	hwloc_get_largest_objs_inside_cpuset$(EXEEXT) \
	hwloc_get_next_obj_covering_cpuset$(EXEEXT) \
	hwloc_get_obj_inside_cpuset$(EXEEXT) \
	hwloc_get_shared_cache_covering_obj$(EXEEXT) \
	hwloc_get_obj_below_array_by_type$(EXEEXT) \
	hwloc_bitmap_first_last_weight$(EXEEXT) \
	hwloc_bitmap_singlify$(EXEEXT) hwloc_type_depth$(EXEEXT) \
	hwloc_bind$(EXEEXT) hwloc_get_last_cpu_location$(EXEEXT) \
	hwloc_get_area_memlocation$(EXEEXT) \
	hwloc_object_userdata$(EXEEXT) hwloc_synthetic$(EXEEXT) \
	hwloc_custom$(EXEEXT) hwloc_backends$(EXEEXT) \
	hwloc_pci_backend$(EXEEXT) hwloc_is_thissystem$(EXEEXT) \
	hwloc_distances$(EXEEXT) hwloc_groups$(EXEEXT) \
	hwloc_groups2$(EXEEXT) hwloc_insert_misc$(EXEEXT) \
	hwloc_topology_restrict$(EXEEXT) hwloc_topology_dup$(EXEEXT) \
	hwloc_topology_diff$(EXEEXT) hwloc_obj_infos$(EXEEXT) \
	hwloc_iodevs$(EXEEXT) xmlbuffer$(EXEEXT) gl$(EXEEXT) \
	intel-mic$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8)
#am__append_2 = linux-libnuma
am__append_3 = glibc-sched
#am__append_4 = openfabrics-verbs
#am__append_5 = myriexpress
#am__append_6 = opencl
#am__append_7 = cuda
#am__append_8 = cudart
#am__append_9 = nvml
am__append_10 = -lpthread
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/wrapper.sh.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/hwloc.m4 \
	$(top_srcdir)/config/hwloc_check_attributes.m4 \
	$(top_srcdir)/config/hwloc_check_vendor.m4 \
	$(top_srcdir)/config/hwloc_check_visibility.m4 \
	$(top_srcdir)/config/hwloc_components.m4 \
	$(top_srcdir)/config/hwloc_internal.m4 \
	$(top_srcdir)/config/hwloc_pkg.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/private/autogen/config.h \
	$(top_builddir)/include/hwloc/autogen/config.h
CONFIG_CLEAN_FILES = wrapper.sh
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = linux-libnuma$(EXEEXT)
am__EXEEXT_2 =  \
	glibc-sched$(EXEEXT)
#am__EXEEXT_3 = openfabrics-verbs$(EXEEXT)
#am__EXEEXT_4 = myriexpress$(EXEEXT)
#am__EXEEXT_5 = opencl$(EXEEXT)
#am__EXEEXT_6 = cuda$(EXEEXT)
#am__EXEEXT_7 = cudart$(EXEEXT)
#am__EXEEXT_8 = nvml$(EXEEXT)
cuda_SOURCES = cuda.c
cuda_OBJECTS = cuda.$(OBJEXT)
cuda_DEPENDENCIES = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
cudart_SOURCES = cudart.c
cudart_OBJECTS = cudart.$(OBJEXT)
cudart_DEPENDENCIES = $(LDADD)
gl_SOURCES = gl.c
gl_OBJECTS = gl.$(OBJEXT)
gl_LDADD = $(LDADD)
gl_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
glibc_sched_SOURCES = glibc-sched.c
glibc_sched_OBJECTS = glibc-sched.$(OBJEXT)
glibc_sched_LDADD = $(LDADD)
glibc_sched_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_backends_SOURCES = hwloc_backends.c
hwloc_backends_OBJECTS = hwloc_backends.$(OBJEXT)
hwloc_backends_LDADD = $(LDADD)
hwloc_backends_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bind_SOURCES = hwloc_bind.c
hwloc_bind_OBJECTS = hwloc_bind.$(OBJEXT)
am__DEPENDENCIES_1 =
hwloc_bind_DEPENDENCIES = $(LDADD) $(am__DEPENDENCIES_1)
hwloc_bitmap_SOURCES = hwloc_bitmap.c
hwloc_bitmap_OBJECTS = hwloc_bitmap.$(OBJEXT)
hwloc_bitmap_LDADD = $(LDADD)
hwloc_bitmap_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_compare_inclusion_SOURCES =  \
	hwloc_bitmap_compare_inclusion.c
hwloc_bitmap_compare_inclusion_OBJECTS =  \
	hwloc_bitmap_compare_inclusion.$(OBJEXT)
hwloc_bitmap_compare_inclusion_LDADD = $(LDADD)
hwloc_bitmap_compare_inclusion_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_first_last_weight_SOURCES =  \
	hwloc_bitmap_first_last_weight.c
hwloc_bitmap_first_last_weight_OBJECTS =  \
	hwloc_bitmap_first_last_weight.$(OBJEXT)
hwloc_bitmap_first_last_weight_LDADD = $(LDADD)
hwloc_bitmap_first_last_weight_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_singlify_SOURCES = hwloc_bitmap_singlify.c
hwloc_bitmap_singlify_OBJECTS = hwloc_bitmap_singlify.$(OBJEXT)
hwloc_bitmap_singlify_LDADD = $(LDADD)
hwloc_bitmap_singlify_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_bitmap_string_SOURCES = hwloc_bitmap_string.c
hwloc_bitmap_string_OBJECTS = hwloc_bitmap_string.$(OBJEXT)
hwloc_bitmap_string_LDADD = $(LDADD)
hwloc_bitmap_string_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_custom_SOURCES = hwloc_custom.c
hwloc_custom_OBJECTS = hwloc_custom.$(OBJEXT)
hwloc_custom_LDADD = $(LDADD)
hwloc_custom_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_distances_SOURCES = hwloc_distances.c
hwloc_distances_OBJECTS = hwloc_distances.$(OBJEXT)
hwloc_distances_LDADD = $(LDADD)
hwloc_distances_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_area_memlocation_SOURCES = hwloc_get_area_memlocation.c
hwloc_get_area_memlocation_OBJECTS =  \
	hwloc_get_area_memlocation.$(OBJEXT)
hwloc_get_area_memlocation_LDADD = $(LDADD)
hwloc_get_area_memlocation_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_cache_covering_cpuset_SOURCES =  \
	hwloc_get_cache_covering_cpuset.c
hwloc_get_cache_covering_cpuset_OBJECTS =  \
	hwloc_get_cache_covering_cpuset.$(OBJEXT)
hwloc_get_cache_covering_cpuset_LDADD = $(LDADD)
hwloc_get_cache_covering_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_closest_objs_SOURCES = hwloc_get_closest_objs.c
hwloc_get_closest_objs_OBJECTS = hwloc_get_closest_objs.$(OBJEXT)
hwloc_get_closest_objs_LDADD = $(LDADD)
hwloc_get_closest_objs_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_largest_objs_inside_cpuset_SOURCES =  \
	hwloc_get_largest_objs_inside_cpuset.c
hwloc_get_largest_objs_inside_cpuset_OBJECTS =  \
	hwloc_get_largest_objs_inside_cpuset.$(OBJEXT)
hwloc_get_largest_objs_inside_cpuset_LDADD = $(LDADD)
hwloc_get_largest_objs_inside_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_last_cpu_location_SOURCES = hwloc_get_last_cpu_location.c
hwloc_get_last_cpu_location_OBJECTS =  \
	hwloc_get_last_cpu_location.$(OBJEXT)
hwloc_get_last_cpu_location_LDADD = $(LDADD)
hwloc_get_last_cpu_location_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_next_obj_covering_cpuset_SOURCES =  \
	hwloc_get_next_obj_covering_cpuset.c
hwloc_get_next_obj_covering_cpuset_OBJECTS =  \
	hwloc_get_next_obj_covering_cpuset.$(OBJEXT)
hwloc_get_next_obj_covering_cpuset_LDADD = $(LDADD)
hwloc_get_next_obj_covering_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_obj_below_array_by_type_SOURCES =  \
	hwloc_get_obj_below_array_by_type.c
hwloc_get_obj_below_array_by_type_OBJECTS =  \
	hwloc_get_obj_below_array_by_type.$(OBJEXT)
hwloc_get_obj_below_array_by_type_LDADD = $(LDADD)
hwloc_get_obj_below_array_by_type_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_obj_covering_cpuset_SOURCES =  \
	hwloc_get_obj_covering_cpuset.c
hwloc_get_obj_covering_cpuset_OBJECTS =  \
	hwloc_get_obj_covering_cpuset.$(OBJEXT)
hwloc_get_obj_covering_cpuset_LDADD = $(LDADD)
hwloc_get_obj_covering_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_obj_inside_cpuset_SOURCES = hwloc_get_obj_inside_cpuset.c
hwloc_get_obj_inside_cpuset_OBJECTS =  \
	hwloc_get_obj_inside_cpuset.$(OBJEXT)
hwloc_get_obj_inside_cpuset_LDADD = $(LDADD)
hwloc_get_obj_inside_cpuset_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_get_shared_cache_covering_obj_SOURCES =  \
	hwloc_get_shared_cache_covering_obj.c
hwloc_get_shared_cache_covering_obj_OBJECTS =  \
	hwloc_get_shared_cache_covering_obj.$(OBJEXT)
hwloc_get_shared_cache_covering_obj_LDADD = $(LDADD)
hwloc_get_shared_cache_covering_obj_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_groups_SOURCES = hwloc_groups.c
hwloc_groups_OBJECTS = hwloc_groups.$(OBJEXT)
hwloc_groups_LDADD = $(LDADD)
hwloc_groups_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_groups2_SOURCES = hwloc_groups2.c
hwloc_groups2_OBJECTS = hwloc_groups2.$(OBJEXT)
hwloc_groups2_LDADD = $(LDADD)
hwloc_groups2_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_insert_misc_SOURCES = hwloc_insert_misc.c
hwloc_insert_misc_OBJECTS = hwloc_insert_misc.$(OBJEXT)
hwloc_insert_misc_LDADD = $(LDADD)
hwloc_insert_misc_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_iodevs_SOURCES = hwloc_iodevs.c
hwloc_iodevs_OBJECTS = hwloc_iodevs.$(OBJEXT)
hwloc_iodevs_LDADD = $(LDADD)
hwloc_iodevs_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_is_thissystem_SOURCES = hwloc_is_thissystem.c
hwloc_is_thissystem_OBJECTS = hwloc_is_thissystem.$(OBJEXT)
hwloc_is_thissystem_LDADD = $(LDADD)
hwloc_is_thissystem_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_list_components_SOURCES = hwloc_list_components.c
hwloc_list_components_OBJECTS = hwloc_list_components.$(OBJEXT)
hwloc_list_components_LDADD = $(LDADD)
hwloc_list_components_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_obj_infos_SOURCES = hwloc_obj_infos.c
hwloc_obj_infos_OBJECTS = hwloc_obj_infos.$(OBJEXT)
hwloc_obj_infos_LDADD = $(LDADD)
hwloc_obj_infos_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_object_userdata_SOURCES = hwloc_object_userdata.c
hwloc_object_userdata_OBJECTS = hwloc_object_userdata.$(OBJEXT)
hwloc_object_userdata_LDADD = $(LDADD)
hwloc_object_userdata_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_pci_backend_SOURCES = hwloc_pci_backend.c
hwloc_pci_backend_OBJECTS = hwloc_pci_backend.$(OBJEXT)
hwloc_pci_backend_LDADD = $(LDADD)
hwloc_pci_backend_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_synthetic_SOURCES = hwloc_synthetic.c
hwloc_synthetic_OBJECTS = hwloc_synthetic.$(OBJEXT)
hwloc_synthetic_LDADD = $(LDADD)
hwloc_synthetic_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_topology_diff_SOURCES = hwloc_topology_diff.c
hwloc_topology_diff_OBJECTS = hwloc_topology_diff.$(OBJEXT)
hwloc_topology_diff_LDADD = $(LDADD)
hwloc_topology_diff_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_topology_dup_SOURCES = hwloc_topology_dup.c
hwloc_topology_dup_OBJECTS = hwloc_topology_dup.$(OBJEXT)
hwloc_topology_dup_LDADD = $(LDADD)
hwloc_topology_dup_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_topology_restrict_SOURCES = hwloc_topology_restrict.c
hwloc_topology_restrict_OBJECTS = hwloc_topology_restrict.$(OBJEXT)
hwloc_topology_restrict_LDADD = $(LDADD)
hwloc_topology_restrict_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
hwloc_type_depth_SOURCES = hwloc_type_depth.c
hwloc_type_depth_OBJECTS = hwloc_type_depth.$(OBJEXT)
hwloc_type_depth_LDADD = $(LDADD)
hwloc_type_depth_DEPENDENCIES =  \
	$(HWLOC_top_builddir)/src/$(hwloc_lib)
intel_mic_SOURCES = intel-mic.c
intel_mic_OBJECTS = intel-mic.$(OBJEXT)
intel_mic_LDADD = $(LDADD)
intel_mic_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
linux_libnuma_SOURCES = linux-libnuma.c
linux_libnuma_OBJECTS = linux-libnuma.$(OBJEXT)
linux_libnuma_DEPENDENCIES = $(LDADD)
myriexpress_SOURCES = myriexpress.c
myriexpress_OBJECTS = myriexpress.$(OBJEXT)
myriexpress_DEPENDENCIES = $(LDADD)
nvml_SOURCES = nvml.c
nvml_OBJECTS = nvml.$(OBJEXT)
nvml_DEPENDENCIES = $(LDADD)
opencl_SOURCES = opencl.c
opencl_OBJECTS = opencl.$(OBJEXT)
opencl_DEPENDENCIES = $(LDADD) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
openfabrics_verbs_SOURCES = openfabrics-verbs.c
openfabrics_verbs_OBJECTS = openfabrics-verbs.$(OBJEXT)
openfabrics_verbs_DEPENDENCIES = $(LDADD)
xmlbuffer_SOURCES = xmlbuffer.c
xmlbuffer_OBJECTS = xmlbuffer.$(OBJEXT)
xmlbuffer_LDADD = $(LDADD)
xmlbuffer_DEPENDENCIES = $(HWLOC_top_builddir)/src/$(hwloc_lib)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include/private/autogen -I$(top_builddir)/include/hwloc/autogen
depcomp = $(SHELL) $(top_srcdir)/./config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = cuda.c cudart.c gl.c glibc-sched.c hwloc_backends.c \
	hwloc_bind.c hwloc_bitmap.c hwloc_bitmap_compare_inclusion.c \
	hwloc_bitmap_first_last_weight.c hwloc_bitmap_singlify.c \
	hwloc_bitmap_string.c hwloc_custom.c hwloc_distances.c \
	hwloc_get_area_memlocation.c hwloc_get_cache_covering_cpuset.c \
	hwloc_get_closest_objs.c \
	hwloc_get_largest_objs_inside_cpuset.c \
	hwloc_get_last_cpu_location.c \
	hwloc_get_next_obj_covering_cpuset.c \
	hwloc_get_obj_below_array_by_type.c \
	hwloc_get_obj_covering_cpuset.c hwloc_get_obj_inside_cpuset.c \
	hwloc_get_shared_cache_covering_obj.c hwloc_groups.c \
	hwloc_groups2.c hwloc_insert_misc.c hwloc_iodevs.c \
	hwloc_is_thissystem.c hwloc_list_components.c \
	hwloc_obj_infos.c hwloc_object_userdata.c hwloc_pci_backend.c \
	hwloc_synthetic.c hwloc_topology_diff.c hwloc_topology_dup.c \
	hwloc_topology_restrict.c hwloc_type_depth.c intel-mic.c \
	linux-libnuma.c myriexpress.c nvml.c opencl.c \
	openfabrics-verbs.c xmlbuffer.c
DIST_SOURCES = cuda.c cudart.c gl.c glibc-sched.c hwloc_backends.c \
	hwloc_bind.c hwloc_bitmap.c hwloc_bitmap_compare_inclusion.c \
	hwloc_bitmap_first_last_weight.c hwloc_bitmap_singlify.c \
	hwloc_bitmap_string.c hwloc_custom.c hwloc_distances.c \
	hwloc_get_area_memlocation.c hwloc_get_cache_covering_cpuset.c \
	hwloc_get_closest_objs.c \
	hwloc_get_largest_objs_inside_cpuset.c \
	hwloc_get_last_cpu_location.c \
	hwloc_get_next_obj_covering_cpuset.c \
	hwloc_get_obj_below_array_by_type.c \
	hwloc_get_obj_covering_cpuset.c hwloc_get_obj_inside_cpuset.c \
	hwloc_get_shared_cache_covering_obj.c hwloc_groups.c \
	hwloc_groups2.c hwloc_insert_misc.c hwloc_iodevs.c \
	hwloc_is_thissystem.c hwloc_list_components.c \
	hwloc_obj_infos.c hwloc_object_userdata.c hwloc_pci_backend.c \
	hwloc_synthetic.c hwloc_topology_diff.c hwloc_topology_dup.c \
	hwloc_topology_restrict.c hwloc_type_depth.c intel-mic.c \
	linux-libnuma.c myriexpress.c nvml.c opencl.c \
	openfabrics-verbs.c xmlbuffer.c
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	check check-html recheck recheck-html distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
# Restructured Text title and section.
am__rst_title = sed 's/.*/   &   /;h;s/./=/g;p;x;p;g;p;s/.*//'
am__rst_section = sed 'p;s/./=/g;p;g'
# Put stdin (possibly several lines separated by ".  ") in a box.
am__text_box = $(AWK) '{				\
  n = split($$0, lines, "\\.  "); max = 0;		\
  for (i = 1; i <= n; ++i)				\
    if (max < length(lines[i]))				\
      max = length(lines[i]);				\
  for (i = 0; i < max; ++i) line = line "=";		\
  print line;						\
  for (i = 1; i <= n; ++i) if (lines[i]) print lines[i];\
  print line;						\
}'
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL).  This contradicts POSIX.  Work around the problem
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log, and passes
# TESTS_ENVIRONMENT.  Save and restore TERM around use of
# TESTS_ENVIRONMENT, in case that unsets it.
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
srcdir=$(srcdir); export srcdir;			\
rm -f $@-t;						\
trap 'st=$$?; rm -f '\''$(abs_builddir)/$@-t'\''; (exit $$st); exit $$st' \
  1 2 13 15;						\
am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;		\
test "x$$am__odir" = x. || $(MKDIR_P) "$$am__odir" || exit $$?;	\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; __SAVED_TERM=$$TERM;		\
$(TESTS_ENVIRONMENT)
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_SUITE_HTML = $(TEST_SUITE_LOG:.log=.html)
TEST_EXTENSIONS =  .test
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
TEST_LOGS_TMP = $(TEST_LOGS:.log=.log-t)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/config/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/config/missing --run autoconf
AUTOHEADER = ${SHELL} /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/config/missing --run autoheader
AUTOMAKE = ${SHELL} /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/config/missing --run automake-1.11
AWK = gawk
BASH = /bin/sh
BUNZIPP = bunzip2
CC = gcc
CCDEPMODE = depmode=gcc3
CC_FOR_BUILD = gcc
CFLAGS =  -g -O2
CONFIGURE_DEPENDENCIES = $(top_srcdir)/VERSION
CPP = gcc -E
CPPFLAGS =  
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EPSTOPDF = 
EXEEXT = 
FGREP = /bin/grep -F
FIG2DEV = 
GREP = /bin/grep
GS = /usr/bin/gs
HWLOC_CAIRO_CFLAGS = -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
HWLOC_CAIRO_LIBS = -lcairo  
HWLOC_CFLAGS =  -fvisibility=hidden -I/usr/include/libxml2  
HWLOC_CPPFLAGS = -I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include
HWLOC_CUDA_LIBS = 
HWLOC_DIFF_U = -u
HWLOC_DIFF_W = -w
HWLOC_EMBEDDED_CFLAGS = 
HWLOC_EMBEDDED_CPPFLAGS = 
HWLOC_EMBEDDED_LDADD = 
HWLOC_EMBEDDED_LDFLAGS = 
HWLOC_EMBEDDED_LIBS = 
HWLOC_GL_LIBS = 
HWLOC_HAVE_LIBXML2 = 1
HWLOC_HAVE_NVML = 0
HWLOC_HAVE_OPENCL = 0
HWLOC_KERRIGHED_CFLAGS = 
HWLOC_KERRIGHED_LIBS = 
HWLOC_LDFLAGS = 
HWLOC_LIBS = -lm   -lxml2  
HWLOC_LIBS_PRIVATE =  -lpthread
HWLOC_LIBXML2_CFLAGS = -I/usr/include/libxml2  
HWLOC_LIBXML2_LIBS = -lxml2  
HWLOC_LINUX_LIBNUMA_LIBS = 
HWLOC_MS_LIB = 
HWLOC_MS_LIB_ARCH = X64
HWLOC_NVML_LIBS = 
HWLOC_OPENCL_CFLAGS = 
HWLOC_OPENCL_LDFLAGS = 
HWLOC_OPENCL_LIBS = 
HWLOC_PCIACCESS_CFLAGS = 
HWLOC_PCIACCESS_LIBS = 
HWLOC_PLUGINS_DIR = $(libdir)/hwloc
HWLOC_PLUGINS_PATH = $(libdir)/hwloc
HWLOC_RELEASE_DATE = Jun 03, 2019
HWLOC_REQUIRES = libxml-2.0 
HWLOC_TERMCAP_LIBS =  -ltermcap
HWLOC_VERSION = 1.11.13
HWLOC_W3_GENERATOR = 
HWLOC_X11_CPPFLAGS = 
HWLOC_X11_LIBS =  -lSM -lICE  -lX11 
HWLOC_XML_LOCALIZED = 0
HWLOC_runstatedir = ${localstatedir}/run
HWLOC_top_builddir = /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13
HWLOC_top_srcdir = /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /s/ls4/sw/binutils/2.30/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS =  
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LYNX = 
MAKEINDEX = 
MAKEINFO = ${SHELL} /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /s/ls4/sw/binutils/2.30/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = hwloc
PACKAGE_BUGREPORT = http://github.com/open-mpi/hwloc/issues
PACKAGE_NAME = hwloc
PACKAGE_STRING = hwloc 1.11.13
PACKAGE_TARNAME = hwloc
PACKAGE_VERSION = 1.11.13
PATH_SEPARATOR = :
PDFLATEX = 
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.11.13
W3M = 
XMKMF = 
XMLLINT = xmllint
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/tests
abs_srcdir = /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/tests
abs_top_builddir = /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13
abs_top_srcdir = /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
libhwloc_so_version = 12:10:7
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /s/ls4/users/a_medvedev/src/imb-gpu/src_cpp/GPU/thirdparty/hwloc-1.11.13/../hwloc
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CFLAGS = $(HWLOC_CFLAGS)
AM_CPPFLAGS = $(HWLOC_CPPFLAGS)
AM_LDFLAGS = $(HWLOC_LDFLAGS)
SUBDIRS = . ports xml $(am__append_1)
DIST_SUBDIRS = ports xml linux rename
LDADD = $(HWLOC_top_builddir)/src/$(hwloc_lib)
LOG_COMPILER = $(builddir)/wrapper.sh
TESTS = $(check_PROGRAMS)
#hwloc_lib = libhwloc_embedded.la

# The library has a different name depending on whether we are
# building in standalone or embedded mode.
hwloc_lib = libhwloc.la
linux_libnuma_LDADD = $(LDADD) -lnuma
openfabrics_verbs_LDADD = $(LDADD) -libverbs
myriexpress_LDADD = $(LDADD) -lmyriexpress
opencl_LDADD = $(LDADD) $(HWLOC_OPENCL_LIBS) $(HWLOC_OPENCL_LDFLAGS)
cuda_LDADD = $(LDADD) -lcuda
cudart_LDADD = $(LDADD) -lcuda -lcudart
nvml_LDADD = $(LDADD) -lnvidia-ml
hwloc_bind_LDADD = $(LDADD) $(am__append_10)

# ship the embedded test code but don't actually let automake ever
# look at it because we have another configure stuff in there
EXTRA_DIST = embedded/autogen.sh \
		embedded/configure.ac \
		embedded/Makefile.am \
		embedded/do_test.c \
		embedded/main.c \
		embedded/run-embedded-tests.sh \
		embedded/README.txt \
		embedded/config/README.txt

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .html .lo .log .o .obj .test .test$(EXEEXT)
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
wrapper.sh: $(top_builddir)/config.status $(srcdir)/wrapper.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
cuda$(EXEEXT): $(cuda_OBJECTS) $(cuda_DEPENDENCIES) 
	@rm -f cuda$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cuda_OBJECTS) $(cuda_LDADD) $(LIBS)
cudart$(EXEEXT): $(cudart_OBJECTS) $(cudart_DEPENDENCIES) 
	@rm -f cudart$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cudart_OBJECTS) $(cudart_LDADD) $(LIBS)
gl$(EXEEXT): $(gl_OBJECTS) $(gl_DEPENDENCIES) 
	@rm -f gl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gl_OBJECTS) $(gl_LDADD) $(LIBS)
glibc-sched$(EXEEXT): $(glibc_sched_OBJECTS) $(glibc_sched_DEPENDENCIES) 
	@rm -f glibc-sched$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(glibc_sched_OBJECTS) $(glibc_sched_LDADD) $(LIBS)
hwloc_backends$(EXEEXT): $(hwloc_backends_OBJECTS) $(hwloc_backends_DEPENDENCIES) 
	@rm -f hwloc_backends$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_backends_OBJECTS) $(hwloc_backends_LDADD) $(LIBS)
hwloc_bind$(EXEEXT): $(hwloc_bind_OBJECTS) $(hwloc_bind_DEPENDENCIES) 
	@rm -f hwloc_bind$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bind_OBJECTS) $(hwloc_bind_LDADD) $(LIBS)
hwloc_bitmap$(EXEEXT): $(hwloc_bitmap_OBJECTS) $(hwloc_bitmap_DEPENDENCIES) 
	@rm -f hwloc_bitmap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_OBJECTS) $(hwloc_bitmap_LDADD) $(LIBS)
hwloc_bitmap_compare_inclusion$(EXEEXT): $(hwloc_bitmap_compare_inclusion_OBJECTS) $(hwloc_bitmap_compare_inclusion_DEPENDENCIES) 
	@rm -f hwloc_bitmap_compare_inclusion$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_compare_inclusion_OBJECTS) $(hwloc_bitmap_compare_inclusion_LDADD) $(LIBS)
hwloc_bitmap_first_last_weight$(EXEEXT): $(hwloc_bitmap_first_last_weight_OBJECTS) $(hwloc_bitmap_first_last_weight_DEPENDENCIES) 
	@rm -f hwloc_bitmap_first_last_weight$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_first_last_weight_OBJECTS) $(hwloc_bitmap_first_last_weight_LDADD) $(LIBS)
hwloc_bitmap_singlify$(EXEEXT): $(hwloc_bitmap_singlify_OBJECTS) $(hwloc_bitmap_singlify_DEPENDENCIES) 
	@rm -f hwloc_bitmap_singlify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_singlify_OBJECTS) $(hwloc_bitmap_singlify_LDADD) $(LIBS)
hwloc_bitmap_string$(EXEEXT): $(hwloc_bitmap_string_OBJECTS) $(hwloc_bitmap_string_DEPENDENCIES) 
	@rm -f hwloc_bitmap_string$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_bitmap_string_OBJECTS) $(hwloc_bitmap_string_LDADD) $(LIBS)
hwloc_custom$(EXEEXT): $(hwloc_custom_OBJECTS) $(hwloc_custom_DEPENDENCIES) 
	@rm -f hwloc_custom$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_custom_OBJECTS) $(hwloc_custom_LDADD) $(LIBS)
hwloc_distances$(EXEEXT): $(hwloc_distances_OBJECTS) $(hwloc_distances_DEPENDENCIES) 
	@rm -f hwloc_distances$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_distances_OBJECTS) $(hwloc_distances_LDADD) $(LIBS)
hwloc_get_area_memlocation$(EXEEXT): $(hwloc_get_area_memlocation_OBJECTS) $(hwloc_get_area_memlocation_DEPENDENCIES) 
	@rm -f hwloc_get_area_memlocation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_area_memlocation_OBJECTS) $(hwloc_get_area_memlocation_LDADD) $(LIBS)
hwloc_get_cache_covering_cpuset$(EXEEXT): $(hwloc_get_cache_covering_cpuset_OBJECTS) $(hwloc_get_cache_covering_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_cache_covering_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_cache_covering_cpuset_OBJECTS) $(hwloc_get_cache_covering_cpuset_LDADD) $(LIBS)
hwloc_get_closest_objs$(EXEEXT): $(hwloc_get_closest_objs_OBJECTS) $(hwloc_get_closest_objs_DEPENDENCIES) 
	@rm -f hwloc_get_closest_objs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_closest_objs_OBJECTS) $(hwloc_get_closest_objs_LDADD) $(LIBS)
hwloc_get_largest_objs_inside_cpuset$(EXEEXT): $(hwloc_get_largest_objs_inside_cpuset_OBJECTS) $(hwloc_get_largest_objs_inside_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_largest_objs_inside_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_largest_objs_inside_cpuset_OBJECTS) $(hwloc_get_largest_objs_inside_cpuset_LDADD) $(LIBS)
hwloc_get_last_cpu_location$(EXEEXT): $(hwloc_get_last_cpu_location_OBJECTS) $(hwloc_get_last_cpu_location_DEPENDENCIES) 
	@rm -f hwloc_get_last_cpu_location$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_last_cpu_location_OBJECTS) $(hwloc_get_last_cpu_location_LDADD) $(LIBS)
hwloc_get_next_obj_covering_cpuset$(EXEEXT): $(hwloc_get_next_obj_covering_cpuset_OBJECTS) $(hwloc_get_next_obj_covering_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_next_obj_covering_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_next_obj_covering_cpuset_OBJECTS) $(hwloc_get_next_obj_covering_cpuset_LDADD) $(LIBS)
hwloc_get_obj_below_array_by_type$(EXEEXT): $(hwloc_get_obj_below_array_by_type_OBJECTS) $(hwloc_get_obj_below_array_by_type_DEPENDENCIES) 
	@rm -f hwloc_get_obj_below_array_by_type$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_obj_below_array_by_type_OBJECTS) $(hwloc_get_obj_below_array_by_type_LDADD) $(LIBS)
hwloc_get_obj_covering_cpuset$(EXEEXT): $(hwloc_get_obj_covering_cpuset_OBJECTS) $(hwloc_get_obj_covering_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_obj_covering_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_obj_covering_cpuset_OBJECTS) $(hwloc_get_obj_covering_cpuset_LDADD) $(LIBS)
hwloc_get_obj_inside_cpuset$(EXEEXT): $(hwloc_get_obj_inside_cpuset_OBJECTS) $(hwloc_get_obj_inside_cpuset_DEPENDENCIES) 
	@rm -f hwloc_get_obj_inside_cpuset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_obj_inside_cpuset_OBJECTS) $(hwloc_get_obj_inside_cpuset_LDADD) $(LIBS)
hwloc_get_shared_cache_covering_obj$(EXEEXT): $(hwloc_get_shared_cache_covering_obj_OBJECTS) $(hwloc_get_shared_cache_covering_obj_DEPENDENCIES) 
	@rm -f hwloc_get_shared_cache_covering_obj$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_get_shared_cache_covering_obj_OBJECTS) $(hwloc_get_shared_cache_covering_obj_LDADD) $(LIBS)
hwloc_groups$(EXEEXT): $(hwloc_groups_OBJECTS) $(hwloc_groups_DEPENDENCIES) 
	@rm -f hwloc_groups$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_groups_OBJECTS) $(hwloc_groups_LDADD) $(LIBS)
hwloc_groups2$(EXEEXT): $(hwloc_groups2_OBJECTS) $(hwloc_groups2_DEPENDENCIES) 
	@rm -f hwloc_groups2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_groups2_OBJECTS) $(hwloc_groups2_LDADD) $(LIBS)
hwloc_insert_misc$(EXEEXT): $(hwloc_insert_misc_OBJECTS) $(hwloc_insert_misc_DEPENDENCIES) 
	@rm -f hwloc_insert_misc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_insert_misc_OBJECTS) $(hwloc_insert_misc_LDADD) $(LIBS)
hwloc_iodevs$(EXEEXT): $(hwloc_iodevs_OBJECTS) $(hwloc_iodevs_DEPENDENCIES) 
	@rm -f hwloc_iodevs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_iodevs_OBJECTS) $(hwloc_iodevs_LDADD) $(LIBS)
hwloc_is_thissystem$(EXEEXT): $(hwloc_is_thissystem_OBJECTS) $(hwloc_is_thissystem_DEPENDENCIES) 
	@rm -f hwloc_is_thissystem$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_is_thissystem_OBJECTS) $(hwloc_is_thissystem_LDADD) $(LIBS)
hwloc_list_components$(EXEEXT): $(hwloc_list_components_OBJECTS) $(hwloc_list_components_DEPENDENCIES) 
	@rm -f hwloc_list_components$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_list_components_OBJECTS) $(hwloc_list_components_LDADD) $(LIBS)
hwloc_obj_infos$(EXEEXT): $(hwloc_obj_infos_OBJECTS) $(hwloc_obj_infos_DEPENDENCIES) 
	@rm -f hwloc_obj_infos$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_obj_infos_OBJECTS) $(hwloc_obj_infos_LDADD) $(LIBS)
hwloc_object_userdata$(EXEEXT): $(hwloc_object_userdata_OBJECTS) $(hwloc_object_userdata_DEPENDENCIES) 
	@rm -f hwloc_object_userdata$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_object_userdata_OBJECTS) $(hwloc_object_userdata_LDADD) $(LIBS)
hwloc_pci_backend$(EXEEXT): $(hwloc_pci_backend_OBJECTS) $(hwloc_pci_backend_DEPENDENCIES) 
	@rm -f hwloc_pci_backend$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_pci_backend_OBJECTS) $(hwloc_pci_backend_LDADD) $(LIBS)
hwloc_synthetic$(EXEEXT): $(hwloc_synthetic_OBJECTS) $(hwloc_synthetic_DEPENDENCIES) 
	@rm -f hwloc_synthetic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_synthetic_OBJECTS) $(hwloc_synthetic_LDADD) $(LIBS)
hwloc_topology_diff$(EXEEXT): $(hwloc_topology_diff_OBJECTS) $(hwloc_topology_diff_DEPENDENCIES) 
	@rm -f hwloc_topology_diff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_topology_diff_OBJECTS) $(hwloc_topology_diff_LDADD) $(LIBS)
hwloc_topology_dup$(EXEEXT): $(hwloc_topology_dup_OBJECTS) $(hwloc_topology_dup_DEPENDENCIES) 
	@rm -f hwloc_topology_dup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_topology_dup_OBJECTS) $(hwloc_topology_dup_LDADD) $(LIBS)
hwloc_topology_restrict$(EXEEXT): $(hwloc_topology_restrict_OBJECTS) $(hwloc_topology_restrict_DEPENDENCIES) 
	@rm -f hwloc_topology_restrict$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_topology_restrict_OBJECTS) $(hwloc_topology_restrict_LDADD) $(LIBS)
hwloc_type_depth$(EXEEXT): $(hwloc_type_depth_OBJECTS) $(hwloc_type_depth_DEPENDENCIES) 
	@rm -f hwloc_type_depth$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(hwloc_type_depth_OBJECTS) $(hwloc_type_depth_LDADD) $(LIBS)
intel-mic$(EXEEXT): $(intel_mic_OBJECTS) $(intel_mic_DEPENDENCIES) 
	@rm -f intel-mic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(intel_mic_OBJECTS) $(intel_mic_LDADD) $(LIBS)
linux-libnuma$(EXEEXT): $(linux_libnuma_OBJECTS) $(linux_libnuma_DEPENDENCIES) 
	@rm -f linux-libnuma$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(linux_libnuma_OBJECTS) $(linux_libnuma_LDADD) $(LIBS)
myriexpress$(EXEEXT): $(myriexpress_OBJECTS) $(myriexpress_DEPENDENCIES) 
	@rm -f myriexpress$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(myriexpress_OBJECTS) $(myriexpress_LDADD) $(LIBS)
nvml$(EXEEXT): $(nvml_OBJECTS) $(nvml_DEPENDENCIES) 
	@rm -f nvml$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nvml_OBJECTS) $(nvml_LDADD) $(LIBS)
opencl$(EXEEXT): $(opencl_OBJECTS) $(opencl_DEPENDENCIES) 
	@rm -f opencl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(opencl_OBJECTS) $(opencl_LDADD) $(LIBS)
openfabrics-verbs$(EXEEXT): $(openfabrics_verbs_OBJECTS) $(openfabrics_verbs_DEPENDENCIES) 
	@rm -f openfabrics-verbs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openfabrics_verbs_OBJECTS) $(openfabrics_verbs_LDADD) $(LIBS)
xmlbuffer$(EXEEXT): $(xmlbuffer_OBJECTS) $(xmlbuffer_DEPENDENCIES) 
	@rm -f xmlbuffer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xmlbuffer_OBJECTS) $(xmlbuffer_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/cuda.Po
include ./$(DEPDIR)/cudart.Po
include ./$(DEPDIR)/gl.Po
include ./$(DEPDIR)/glibc-sched.Po
include ./$(DEPDIR)/hwloc_backends.Po
include ./$(DEPDIR)/hwloc_bind.Po
include ./$(DEPDIR)/hwloc_bitmap.Po
include ./$(DEPDIR)/hwloc_bitmap_compare_inclusion.Po
include ./$(DEPDIR)/hwloc_bitmap_first_last_weight.Po
include ./$(DEPDIR)/hwloc_bitmap_singlify.Po
include ./$(DEPDIR)/hwloc_bitmap_string.Po
include ./$(DEPDIR)/hwloc_custom.Po
include ./$(DEPDIR)/hwloc_distances.Po
include ./$(DEPDIR)/hwloc_get_area_memlocation.Po
include ./$(DEPDIR)/hwloc_get_cache_covering_cpuset.Po
include ./$(DEPDIR)/hwloc_get_closest_objs.Po
include ./$(DEPDIR)/hwloc_get_largest_objs_inside_cpuset.Po
include ./$(DEPDIR)/hwloc_get_last_cpu_location.Po
include ./$(DEPDIR)/hwloc_get_next_obj_covering_cpuset.Po
include ./$(DEPDIR)/hwloc_get_obj_below_array_by_type.Po
include ./$(DEPDIR)/hwloc_get_obj_covering_cpuset.Po
include ./$(DEPDIR)/hwloc_get_obj_inside_cpuset.Po
include ./$(DEPDIR)/hwloc_get_shared_cache_covering_obj.Po
include ./$(DEPDIR)/hwloc_groups.Po
include ./$(DEPDIR)/hwloc_groups2.Po
include ./$(DEPDIR)/hwloc_insert_misc.Po
include ./$(DEPDIR)/hwloc_iodevs.Po
include ./$(DEPDIR)/hwloc_is_thissystem.Po
include ./$(DEPDIR)/hwloc_list_components.Po
include ./$(DEPDIR)/hwloc_obj_infos.Po
include ./$(DEPDIR)/hwloc_object_userdata.Po
include ./$(DEPDIR)/hwloc_pci_backend.Po
include ./$(DEPDIR)/hwloc_synthetic.Po
include ./$(DEPDIR)/hwloc_topology_diff.Po
include ./$(DEPDIR)/hwloc_topology_dup.Po
include ./$(DEPDIR)/hwloc_topology_restrict.Po
include ./$(DEPDIR)/hwloc_type_depth.Po
include ./$(DEPDIR)/intel-mic.Po
include ./$(DEPDIR)/linux-libnuma.Po
include ./$(DEPDIR)/myriexpress.Po
include ./$(DEPDIR)/nvml.Po
include ./$(DEPDIR)/opencl.Po
include ./$(DEPDIR)/openfabrics-verbs.Po
include ./$(DEPDIR)/xmlbuffer.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# To be appended to the command running the test.  Handle the stdout
# and stderr redirection, and catch the exit status.
am__check_post =					\
>$@-t 2>&1;						\
estatus=$$?;						\
if test -n '$(DISABLE_HARD_ERRORS)'			\
   && test $$estatus -eq 99; then			\
  estatus=1;						\
fi;							\
TERM=$$__SAVED_TERM; export TERM;			\
$(am__tty_colors);					\
xfailed=PASS;						\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    xfailed=XFAIL;;					\
esac;							\
case $$estatus:$$xfailed in				\
    0:XFAIL) col=$$red; res=XPASS;;			\
    0:*)     col=$$grn; res=PASS ;;			\
    77:*)    col=$$blu; res=SKIP ;;			\
    99:*)    col=$$red; res=FAIL ;;			\
    *:XFAIL) col=$$lgn; res=XFAIL;;			\
    *:*)     col=$$red; res=FAIL ;;			\
esac;							\
echo "$${col}$$res$${std}: $$f";			\
echo "$$res: $$f (exit: $$estatus)" |			\
  $(am__rst_section) >$@;				\
cat $@-t >>$@;						\
rm -f $@-t

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__sh_e_setup);						\
	list='$(TEST_LOGS)';						\
	results=`for f in $$list; do					\
		   read line < $$f && echo "$$line" || echo FAIL;	\
		 done`;							\
	all=`echo "$$results" | sed '/^$$/d' | wc -l | sed -e 's/^[	 ]*//'`; \
	fail=`echo "$$results" | grep -c '^FAIL'`;			\
	pass=`echo "$$results" | grep -c '^PASS'`;			\
	skip=`echo "$$results" | grep -c '^SKIP'`;			\
	xfail=`echo "$$results" | grep -c '^XFAIL'`;			\
	xpass=`echo "$$results" | grep -c '^XPASS'`;			\
	failures=`expr $$fail + $$xpass`;				\
	all=`expr $$all - $$skip`;					\
	if test "$$all" -eq 1; then tests=test; All=;			\
	else tests=tests; All="All "; fi;				\
	case fail=$$fail:xpass=$$xpass:xfail=$$xfail in			\
	  fail=0:xpass=0:xfail=0)					\
	    msg="$$All$$all $$tests passed.  ";				\
	    exit=true;;							\
	  fail=0:xpass=0:xfail=*)					\
	    msg="$$All$$all $$tests behaved as expected";		\
	    if test "$$xfail" -eq 1; then xfailures=failure;		\
	    else xfailures=failures; fi;				\
	    msg="$$msg ($$xfail expected $$xfailures).  ";		\
	    exit=true;;							\
	  fail=*:xpass=0:xfail=*)					\
	    msg="$$fail of $$all $$tests failed.  ";			\
	    exit=false;;						\
	  fail=*:xpass=*:xfail=*)					\
	    msg="$$failures of $$all $$tests did not behave as expected"; \
	    if test "$$xpass" -eq 1; then xpasses=pass;			\
	    else xpasses=passes; fi;					\
	    msg="$$msg ($$xpass unexpected $$xpasses).  ";		\
	    exit=false;;						\
	  *)								\
	    echo >&2 "incorrect case"; exit 4;;				\
	esac;								\
	if test "$$skip" -ne 0; then					\
	  if test "$$skip" -eq 1; then					\
	    msg="$$msg($$skip test was not run).  ";			\
	  else								\
	    msg="$$msg($$skip tests were not run).  ";			\
	  fi;								\
	fi;								\
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  echo "$$msg";							\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for f in $$list; do						\
	    read line < $$f;						\
	    case $$line in						\
	      PASS:*|XFAIL:*);;						\
	      *) echo; cat $$f;;					\
	    esac;							\
	  done;								\
	} >$(TEST_SUITE_LOG).tmp;					\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if test "$$failures" -ne 0; then				\
	  msg="$${msg}See $(subdir)/$(TEST_SUITE_LOG).  ";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    msg="$${msg}Please report to $(PACKAGE_BUGREPORT).  ";	\
	  fi;								\
	fi;								\
	test x"$$VERBOSE" = x || $$exit || cat $(TEST_SUITE_LOG);	\
	$(am__tty_colors);						\
	if $$exit; then							\
	  echo $(ECHO_N) "$$grn$(ECHO_C)";				\
	 else								\
	  echo $(ECHO_N) "$$red$(ECHO_C)";				\
	fi;								\
	echo "$$msg" | $(am__text_box);					\
	echo $(ECHO_N) "$$std$(ECHO_C)";				\
	$$exit

# Run all the tests.
check-TESTS:
	@list='$(RECHECK_LOGS)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@list='$(TEST_LOGS)';						\
	list=`for f in $$list; do					\
	  test .log = $$f || echo $$f;					\
	done | tr '\012\015' '  '`;					\
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$list"

.log.html:
	@list='$(RST2HTML) $$RST2HTML rst2html rst2html.py';		\
	for r2h in $$list; do						\
	  if ($$r2h --version) >/dev/null 2>&1; then			\
	    R2H=$$r2h;							\
	  fi;								\
	done;								\
	if test -z "$$R2H"; then					\
	  echo >&2 "cannot find rst2html, cannot create $@";		\
	  exit 2;							\
	fi;								\
	$$R2H $< >$@.tmp
	@mv $@.tmp $@

# Be sure to run check first, and then to convert the result.
# Beware of concurrent executions.  Run "check" not "check-TESTS", as
# check-SCRIPTS and other dependencies are rebuilt by the former only.
# And expect check to fail.
check-html:
	@if $(MAKE) $(AM_MAKEFLAGS) check; then			\
	  rv=0; else rv=$$?;					\
	fi;							\
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_HTML) || exit 4;	\
	exit $$rv
recheck recheck-html:
	@target=`echo $@ | sed 's,^re,,'`;				\
	list='$(TEST_LOGS)';						\
	list=`for f in $$list; do					\
	        test -f $$f || continue;				\
	        if read line < $$f; then				\
	          case $$line in FAIL*|XPASS*) echo $$f;; esac;		\
	        else echo $$f; fi;					\
	      done | tr '\012\015' '  '`;				\
	$(MAKE) $(AM_MAKEFLAGS) $$target AM_MAKEFLAGS='$(AM_MAKEFLAGS) TEST_LOGS="'"$$list"'"'
hwloc_list_components.log: hwloc_list_components$(EXEEXT)
	@p='hwloc_list_components$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_bitmap.log: hwloc_bitmap$(EXEEXT)
	@p='hwloc_bitmap$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_bitmap_string.log: hwloc_bitmap_string$(EXEEXT)
	@p='hwloc_bitmap_string$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_bitmap_compare_inclusion.log: hwloc_bitmap_compare_inclusion$(EXEEXT)
	@p='hwloc_bitmap_compare_inclusion$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_closest_objs.log: hwloc_get_closest_objs$(EXEEXT)
	@p='hwloc_get_closest_objs$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_obj_covering_cpuset.log: hwloc_get_obj_covering_cpuset$(EXEEXT)
	@p='hwloc_get_obj_covering_cpuset$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_cache_covering_cpuset.log: hwloc_get_cache_covering_cpuset$(EXEEXT)
	@p='hwloc_get_cache_covering_cpuset$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_largest_objs_inside_cpuset.log: hwloc_get_largest_objs_inside_cpuset$(EXEEXT)
	@p='hwloc_get_largest_objs_inside_cpuset$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_next_obj_covering_cpuset.log: hwloc_get_next_obj_covering_cpuset$(EXEEXT)
	@p='hwloc_get_next_obj_covering_cpuset$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_obj_inside_cpuset.log: hwloc_get_obj_inside_cpuset$(EXEEXT)
	@p='hwloc_get_obj_inside_cpuset$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_shared_cache_covering_obj.log: hwloc_get_shared_cache_covering_obj$(EXEEXT)
	@p='hwloc_get_shared_cache_covering_obj$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_obj_below_array_by_type.log: hwloc_get_obj_below_array_by_type$(EXEEXT)
	@p='hwloc_get_obj_below_array_by_type$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_bitmap_first_last_weight.log: hwloc_bitmap_first_last_weight$(EXEEXT)
	@p='hwloc_bitmap_first_last_weight$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_bitmap_singlify.log: hwloc_bitmap_singlify$(EXEEXT)
	@p='hwloc_bitmap_singlify$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_type_depth.log: hwloc_type_depth$(EXEEXT)
	@p='hwloc_type_depth$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_bind.log: hwloc_bind$(EXEEXT)
	@p='hwloc_bind$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_last_cpu_location.log: hwloc_get_last_cpu_location$(EXEEXT)
	@p='hwloc_get_last_cpu_location$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_get_area_memlocation.log: hwloc_get_area_memlocation$(EXEEXT)
	@p='hwloc_get_area_memlocation$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_object_userdata.log: hwloc_object_userdata$(EXEEXT)
	@p='hwloc_object_userdata$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_synthetic.log: hwloc_synthetic$(EXEEXT)
	@p='hwloc_synthetic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_custom.log: hwloc_custom$(EXEEXT)
	@p='hwloc_custom$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_backends.log: hwloc_backends$(EXEEXT)
	@p='hwloc_backends$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_pci_backend.log: hwloc_pci_backend$(EXEEXT)
	@p='hwloc_pci_backend$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_is_thissystem.log: hwloc_is_thissystem$(EXEEXT)
	@p='hwloc_is_thissystem$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_distances.log: hwloc_distances$(EXEEXT)
	@p='hwloc_distances$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_groups.log: hwloc_groups$(EXEEXT)
	@p='hwloc_groups$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_groups2.log: hwloc_groups2$(EXEEXT)
	@p='hwloc_groups2$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_insert_misc.log: hwloc_insert_misc$(EXEEXT)
	@p='hwloc_insert_misc$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_topology_restrict.log: hwloc_topology_restrict$(EXEEXT)
	@p='hwloc_topology_restrict$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_topology_dup.log: hwloc_topology_dup$(EXEEXT)
	@p='hwloc_topology_dup$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_topology_diff.log: hwloc_topology_diff$(EXEEXT)
	@p='hwloc_topology_diff$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_obj_infos.log: hwloc_obj_infos$(EXEEXT)
	@p='hwloc_obj_infos$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
hwloc_iodevs.log: hwloc_iodevs$(EXEEXT)
	@p='hwloc_iodevs$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
xmlbuffer.log: xmlbuffer$(EXEEXT)
	@p='xmlbuffer$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
gl.log: gl$(EXEEXT)
	@p='gl$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
intel-mic.log: intel-mic$(EXEEXT)
	@p='intel-mic$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
linux-libnuma.log: linux-libnuma$(EXEEXT)
	@p='linux-libnuma$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
glibc-sched.log: glibc-sched$(EXEEXT)
	@p='glibc-sched$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
openfabrics-verbs.log: openfabrics-verbs$(EXEEXT)
	@p='openfabrics-verbs$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
myriexpress.log: myriexpress$(EXEEXT)
	@p='myriexpress$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
opencl.log: opencl$(EXEEXT)
	@p='opencl$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
cuda.log: cuda$(EXEEXT)
	@p='cuda$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
cudart.log: cudart$(EXEEXT)
	@p='cudart$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
nvml.log: nvml$(EXEEXT)
	@p='nvml$(EXEEXT)'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
.test.log:
	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)
#.test$(EXEEXT).log:
#	@p='$<'; $(am__check_pre) $(TEST_LOG_COMPILE) "$$tst" $(am__check_post)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS_TMP)" || rm -f $(TEST_LOGS_TMP)
	-test -z "$(TEST_SUITE_HTML)" || rm -f $(TEST_SUITE_HTML)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) check-am \
	check-html ctags-recursive install-am install-strip recheck \
	recheck-html tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am check-html clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck recheck-html tags tags-recursive uninstall \
	uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
